version: "3"
services:

  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    expose:
      - "80"
      - "443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    privileged: true
    networks:
      - spring_net

  golang:
    build:
      context: ./www/default
    container_name: golang
    ports:
      - "9090:9090"
    expose:
      - "9090"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
    environment:
      TZ: "$TZ"
    restart: always
    privileged: true
    networks:
      - spring_net


  mysql8:
    image: mysql:${MYSQL8_VERSION}
    container_name: mysql8
    #command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - ${DATA_DIR}/mysql8:/var/lib/mysql
      - ${MYSQL8_CONF_FILE}:/etc/mysql/conf.d
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL8_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL8_DATABASE}
      MYSQL_USER: ${MYSQL8_USER}
      MYSQL_PASSWORD: ${MYSQL8_PASSWORD}
    privileged: true
    networks:
      - spring_net
 
  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - /etc/localtime:/etc/localtime:ro # 设置容器时区与宿主机保持一致
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    privileged: true
    entrypoint: ["redis-server", "/etc/redis.conf"]
    #command: redis-server --port 6379 --requirepass taokin2020  --appendonly yes
    environment:
      TZ: "$TZ"
    networks:
      - spring_net
  
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - ${ADMINER_HOST_PORT}:8080
    networks:
      - spring_net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    volumes:
      - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
      - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
    networks:
      - spring_net
    restart: always
    environment:
      - PMA_HOST=mysql8
      - PMA_PORT=3306
      - TZ=$TZ

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
       - "${MONGODB_HOST_PORT}:${MONGODB_CONTAINER_PORT}"
    restart: always
    privileged: true
    networks:
       - spring_net
  #  command:
  #     --auth
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "${MONGOEXPRESS_PORT}:8081"
    environment:
      - ME_CONFIG_MONGODB_PORT=${MONGODB_CONTAINER_PORT}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=user
      - ME_CONFIG_BASICAUTH_PASSWORD=qwe666666
    restart: always
    networks:
      - spring_net

  rabbitmq:
    #setup host name
    container_name: rabbitmq
    #hostname: rabbitmq_host
    #use docker images
    image: rabbitmq:${RABBITMQ_VERSION}
    #ports setting
    ports:
      - "${RABBITMQ_UI_PORT}:15672" #-- 管理界面ui端口  客户端连接端口映射
      - "${RABBITMQ_CLIENT_PORT}:5672" #client端通信口
      #- "4369:4369" # erlang发现口
      #- "25672:25672" # server间内部通信口
    restart: always
    #volumes setting
    volumes:
      - "${RABBITMQ_CONF_FILE}:/etc/rabbitmq/rabbitmq.conf"
      - "${RABBITMQ_DATA_DIR}:/var/lib/rabbitmq"
      - "${RABBITMQ_LOG_DIR}:/var/log/rabbitmq/log"
    networks:
      - spring_net
 
############################################
volumes:
  portainer_data:
networks:
  spring_net:
